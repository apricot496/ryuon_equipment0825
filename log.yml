construction　background:
    - このゲームのキャラクターにつける装備をまとめたサイトが存在せず，ゲーム内で確認するにもいちいちタップしてステータスやアビリティを確認するのが煩わしい．
    如何せん種類は500種類ぐらいは超えているため，一目で調べられるものを作るのが目的．
    
    - 装備の種類: #キャラクター一体に付き，以下の三種類一つずつの装着が可能．この装備の種類ごとに検索ページを作る.
        - 武器: weapon.py
        - 防具: armor.py
        - 装飾: accessory.py
    -フィルター項目
        - レアリティ: #レアリティはKSR > SSR > SR > R > N ．SR以下はリリース当初からほぼ使われていないゴミであるため今回はまとめない．邪魔．KSRは極みスーパーレアの略称，2022年の6月に新たに追加されたレアリティ
            - ksr: 週に1,2個で新しいのが出てるため，情報の更新が必要
            - ssr: 多分もう新しいのは出ない
        - ステータス　#一つの装備につき1,2種のステータスが上がる
            - 体力
            - 攻撃力
            - 防御力
            - 会心率
            - 回避率
            - 命中率
        - アビリティ#その装備固有の能力，条件付きでステータスが上がったり，状態異常にさせる確率上げたり等することができる
            - アビリティの効果はカテゴリ化させて絞りこみを行う．専用のcsvを設けて方が各装備のカテゴリに整合性をとる(ability-category.csv)

#ファイル説明
ryuon_sobi_streamlit_vol3/:
    - pages/ : フォルダ名変更不可，ここにstreamlitのコードを入れておくと別pageとして動かせる
        - 01_armor.py
            #weapon.pyの防具版
            #二つのcsvをconcatさせたものをdatafreamとしている．分けているのはdataの更新上の問題およびゲームの並び順の問題(ksr古い→新しい,ssr古い→新しいの順で並ぶようにしているが,ksrの方は常に最新のものが出るため,dataframe上では中盤に最新のものが更新されるようにしている)
            #ファイル名01_を頭につけるとpagesの順番を決められる
            database: ksr_armor.csv,ssr_armor.csv
        - 02_accessory.py:
            #weapon.pyの装飾版
            #二つのcsvをconcatさせたものをdatafreamとしている．分けているのはdataの更新上の問題およびゲームの並び順の問題(ksr古い→新しい,ssr古い→新しいの順で並ぶようにしているがksrの方は常に最新のものが出るため,dataframe上では中盤に最新のものが更新されるようにしている)
            #ファイル名02_を頭につけるとpagesの順番を決められる
            database: ksr_accesary.csv,ssr_accesary.csv
            
    - sobi/ : databaseの保管場所
        - ksr_accesary.csv
        - ksr_weapon.csv
        - ksr_armor.csv
        - ssr_accesary.csv
        - ssr_weapon.csv
        - ssr_armor.csv
        - ability-category.csv #装備を検索するためのカテゴリをまとめたもの
    - weapon.py:#一応main pageっぽい立ち位置
        #二つのcsvをconcatさせたものをdatafreamとしている．分けているのはdataの更新上の問題およびゲームの並び順の問題(ksr古い→新しい,ssr古い→新しいの順で並ぶようにしているが,ksrの方は常に最新のものが出るため,dataframe上では中盤に最新のものが更新されるようにしている)
        database: ksr_weapon.csv,ssr_weapon.csv
        
    
    - requirements.txt:
        #streamlit cloudを動かすにあたり必要なもの
        #ファイル名変更不可
        #ライブラリのバージョンを記述
    - version.py:
        #streamlit cloudを動かすのには必要はない
        #requirements.txtを書くためのバージョンを調べるもの
        #結果を出力するだけでファイルに出力するようにはあえてしていない(変にバージョンが変わるのを防ぐため)
    - ryuon-equipment-38a59fa0f789.json
        #流用禁止，スプレッドシートにアクセスし，sobiフォルダのcsvを更新するためのもの
    - creat_csv.py
        #スプレッドシートにアクセスし，sobiフォルダのcsvを更新

version_log:
    - vol3:
        #公開に成功(現在streamlit Cloudで公開中)
        - 改善点
           - 軽微なバグでフィルタ項目をチェックしたまま他のページに行くと以下のようなバグが起きる
               - 最初からそのチェック項目に沿った出力になってしまう(例: 武器のページで防御力だけをフィルタしたときに，防具のページに飛ぶと防御力がフィルタされたDatafreamが出力される)
               - 絞らないのチェックが入っているのに，前のフィルタ項目が出力されている
           - 更新が面倒なのと，当初から考えていたでこのゲームを引退した時にこれをどうしようか決めかねていた(引退予定おそらく9月末,プレイヤーレベル200になったとき)
               - 意外と需要があったので，他の人も運用してもらうことに
               - プログラムかける人の募集はしづらいため，プログラム言語の知識がなくても更新が行えるようにする必要がある
                   - コマンドラインを扱うことに抵抗ない人であれば，git操作を教えるだけでいけそうだけど，そもそも俺がgithubの知識がないからなし
                   - 当然SQLも専門職でない一般人が扱うのは難しい
                   - そもそもスプレッドシートから直接Datafreamを出力できるようにすればいい．最低限Excelで値を入力する能力ぐらいでいける(マクロや関数なし,ただしセル結合はさせないようにしないと)
                   
    - Vol4:
       - vol3からの修正
           - スプレッドシートから直接Datafreamを出力できるようにした
               - 試しに一つ適当に付け加えてみたらちゃんと機能した
           - sobiフォルダやcreat_csv.pyはもう要らない気もするが，改善点がなくなるませは一応残しておく
           - 改善点
                - 軽微なバグでフィルタ項目をチェックしたまま他のページに行くと以下のようなバグが起きる(今回ノンタッチ)
                   - 最初からそのチェック項目に沿った出力になってしまう(例:武器のページで防御力だけをフィルタしたときに，防具のページに飛ぶと防御力がフィルタされたDatafreamが出力される)
                   - 絞らないのチェックが入っているのに，前のフィルタ項目が出力されている
                - 動作が重い
                   - 何かアクション起こす度に5秒ほどloadを起こす.使用性論外
                       - 改善案
                           - 検索項目をwithで括る
                               - この場合全ての検索項目をチェックしてから動作させないといけないため，検索ボタンを設置する必要がある
                               - 検索する度にロードしてしまうが確実
                           -　やっぱcsvから出力することにしようか
                               - git comit,git push等のコマンドラインを打たずに更新できるようなものを別に開発する必要がある
                               - やっぱむずい
                           - cacheを保存
                               - これでいいんじゃね
                               - 最初のロードだけで済んだのでヨシ
                               - ただ,仕組みが不明なところが多いため，軽微なバグも含めて新たな課題が出てきそう
                - 何故かステータスのフィルタが機能しない
                    - Vol5で直そう．フィルタ方法はoutput['攻撃力']>0のようにして絞り込みを行っているがstrが入っているらしい
    - Vol5:
        - Vol4からの改善点
            - cacheを保存を採用
                - ロードが最初だけになったの熱い
            - 何故かステータスのフィルタが機能しない
                - 一部修正どうやら空白がNullではなく文字列になっていたようなので,Nullに直してもらった．
                - ついでにDataframeにNoneを出力しないようにしてもらった
        - 改善点
            - ステータスフィルタとレアリティフィルタを同時に処理すると何故か機能しない(早急な対処が必要)
            - 対処してもらった          
            - 軽微なバグでフィルタ項目をチェックしたまま他のページに行くと以下のようなバグが起きる(流石に今回直そう)
                - フィルタを行った後,他のページに移動するとそのページでのフィルタの条件で出力されている
                    - 例:weaponで防御力でフィルタ検索を行った後、armorのページに遷移すると防御力でフィルタされたDatafreamが出力される
                - 絞らないのチェックが入っているのに，前のフィルタ項目が出力されている
                    - 例:weaponで防御力をフィルタしたとき、ステータスを[絞る]にチェックを入れてステータスのセレクトボタンが出力される。その状態で他のページに遷移するとステータス[絞らない]にチェックされているにもかかわらずステータスのセレクトボタンが出力されている
                - 対処法
                    - ボタンの変数名,boolが入ってる変数名を全部変える
                        - 確実に武器でフィルタいじった後に防具に移動したりしたときとかは問題なさそう
                        - しかし武器→防具→武器に戻った時に，前でいじったフィルタの状態と絞り込み選択タグがおかしくなるバグの対処にはなるのか？
                        - page切り替える時に自動でキャッシュクリア
                        - 多分一番コード的に少なそうだけど，できるのか不明(cache_clearというのがあるらしいが使い方がよーわからん)
                        - やってみたが，キャッシュを全部クリアしてしまうためスプレッドシートで読み込んだ分ものキャッシュもクリアしてしまう
    - Vol6:
        - Vol5からの改善点
            - 表示がバグったときに押すところを追加し,以下のバグが解消(本当はページ遷移しなくてもできるようにしたい)
                - フィルタを行った後,他のページに移動するとそのページでのフィルタの条件で出力されている
                    - 例:weaponで防御力でフィルタ検索を行った後、armorのページに遷移すると防御力でフィルタされたDatafreamが出力される
                - 絞らないのチェックが入っているのに，前のフィルタ項目が出力されている
                    - 例:weaponで防御力をフィルタしたとき、ステータスを[絞る]にチェックを入れてステータスのセレクトボタンが出力される。その状態で他のページに遷移するとステータス[絞らない]にチェックされているにもかかわらずステータスのセレクトボタンが出力されている
            - vol5αでweapon,armor,accesory全部変数名を変えることでバグの修正を図った
                - バグが解消された部分
                    - 上記二つのバグは確かに改善されたが想定した通りの新たなバグが見られた
                    - フィルタを行った後に別のページに遷移したときは改善しているが、再度そのページに戻った際表示がバグる
                    - 例:weaponで防御力をフィルタし、armorに移動し再度weaponに戻ると前のバグ同様,armorでページ遷移を行う前のフィルタの条件で出力されており、ステータス[絞らない]にチェックされているにもかかわらずステータスのセレクトボタンが出力されている
                    - 上記のようにページ遷移時に選択項目を全てリセットしDataframeも全て出力できるようにしたい
